version: '3.7'

services:

  postgres-db:
    container_name: postgres-db-container
    image: postgres:${POSTGRES_VERSION:-10.5}
    expose:
      - 5432
    ports:
      - ${DB_PORT:-5432}:5432
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD:-exchange_pass}
      - POSTGRES_USER=${DB_USERNAME:-exchange_user}
      - POSTGRES_DB=${DB_NAME:-exchange_db}
    restart: unless-stopped
    networks:
      - exchange-backend

  exchange-server:
    container_name: exchange-application-container
    build:
      context: .
    image: exchange-application:${APPLICATION_VERSION:-1.0}
    expose:
      - 8081
    ports:
      - ${APPLICATION_PORT:-8081}:8081
    environment:
      # User Datasource
      - user.datasource.jdbcUrl=jdbc:postgresql://postgres-db:5432/exchange_db?currentSchema=user
      - user.datasource.username=exchange_user
      - user.datasource.password=exchange_pass
      # Wallet Datasource
      - wallet.datasource.jdbcUrl=jdbc:postgresql://postgres-db:5432/exchange_db?currentSchema=wallet
      - wallet.datasource.username=exchange_user
      - wallet.datasource.password=exchange_pass
    depends_on:
      - postgres-db
    links:
      - postgres-db
    networks:
      - exchange-backend

  prometheus:
    image: prom/prometheus:v2.36.2
    container_name: prometheus-container
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data-volume:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - ${PROMETHEUS_PORT:-9090}:9090
    restart: unless-stopped
    links:
      - exchange-server
    depends_on:
      - exchange-server
    networks:
      - exchange-backend

volumes:
  postgres-db-volume:
  prometheus-data-volume:

networks:
  exchange-backend:
    driver: bridge